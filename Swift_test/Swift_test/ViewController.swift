////  ViewController.swift//  Swift_test////  Created by ipanel on 17/3/10.//  Copyright © 2017年 ipanel. All rights reserved.//import UIKittypealias funcBlock = () -> ()class ViewController: UIViewController,UIScrollViewDelegate {    let imageHeight:CGFloat = 169.0//图片真实尺寸高度    let imageView = UIImageView()        override func viewDidLoad() {        super.viewDidLoad()        self.view.backgroundColor =  UIColorFromRGB(rgbValue: 0xffffff)        self.loadUI()        // Do any additional setup after loading the view, typically from a nib.    }    func loadUI() {        let scrollView:UIScrollView = UIScrollView(frame:self.view.bounds)        scrollView.contentSize = CGSize(width:0,height:Screen_height()*2)        scrollView.delegate = self        scrollView.backgroundColor = randomColor()        scrollView.showsVerticalScrollIndicator = false        imageView.frame = CGRect(x:0,y:0,width:Screen_width(),height:imageHeight)        imageView.image = UIImage.init(named: "image.jpg")        imageView.contentMode = UIViewContentMode.scaleAspectFill;        scrollView.addSubview(imageView)        self.view.addSubview(scrollView)            }    /*     *  UIScrollViewDelegate     */    func scrollViewDidScroll(_ scrollView: UIScrollView) {        let y = scrollView.contentOffset.y        if y < 0 {            /*             *  这里也是优于OC的一点，用过OC的都懂=_=             */            imageView.frame.origin.y = y            imageView.frame.size.height =  -y + imageHeight        }        WY_NSLOG1(y)    }    override func didReceiveMemoryWarning() {        super.didReceiveMemoryWarning()        // Dispose of any resources that can be recreated.    }}/* *  properties (当宏用) *///let Screen_width = UIScreen.main.bounds.size.width   //屏幕宽度//let Screen_height = UIScreen.main.bounds.size.height  //屏幕高度let SPACENAV_HEIGHT = 20 //最上面信息栏的高度/* *  methods */func Screen_width()->CGFloat{    return UIScreen.main.bounds.size.width   //屏幕宽度}func Screen_height()->CGFloat{    return UIScreen.main.bounds.size.height   //屏幕宽度}func Delay(time:Double,action:funcBlock!){        let delay = DispatchTime.now() + time    DispatchQueue.main.asyncAfter(deadline: delay) {        action()    }}func RGBA(r:CGFloat,g:CGFloat,b:CGFloat,a:CGFloat) -> UIColor {    return UIColor(red: r, green: g, blue: b, alpha: a)}func randomColor() -> UIColor {    return RGBA(r: CGFloat(arc4random()%255)/256.0, g: CGFloat(arc4random()%255)/256.0, b: CGFloat(arc4random()%255)/256.0, a: 1.0)}func UIColorFromRGB (rgbValue: NSInteger)->UIColor {    let r = CGFloat((rgbValue & 0xFF0000) >> 16)    let g = CGFloat((rgbValue & 0xFF00) >> 8)    let b = CGFloat(rgbValue & 0xFF)        return RGBA(r: r/255.0, g: g/255.0, b: b/255.0, a: 1.0)}func WY_NSLOG1<T>(_ messsage : T, file : String = #file, funcName : String = #function) {    #if DEBUG        let fileName = (file as NSString).lastPathComponent        print("\(fileName):(\(funcName)):\(messsage)")    #endif}class BasicApi: NSObject {    /*     *  单例     */    static let sharedInstance = BasicApi()    }